trigger:
  - main

resources:
  - repo: self

variables:
  tag: $(Build.BuildId)
  dockerRegistryServiceConnection: dockerConnection  # Name of the Docker Hub connection
  imageName: samtec7856/my-angular-app  # Ensure this matches your Docker Hub repo name

stages:
  - stage: Build
    displayName: Build Docker Image
    jobs:
      - job: Build
        displayName: Build Docker Image
        continueOnError: true
        pool:
          vmImageName: Hosted Agent
        steps:
          - task: Checkout@1
            displayName: Checkout code

          # Build Docker image
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              command: build
              dockerfile: $(Build.SourcesDirectory)/Dockerfile
              tags: |
                $(tag)
                latest
              buildContext: $(Build.SourcesDirectory)

          # Push Docker image to Docker Hub
          - task: Docker@2
            displayName: Push Docker Image to Registry
            inputs:
              command: push
              containerRegistry: $(dockerRegistryServiceConnection)  # Connects to Docker Hub
              repository: $(imageName)
              tags: |
                $(tag)
                latest

  - stage: Release
    displayName: Release Docker Image
    jobs:
      - job: Deploy
        displayName: Deploy Docker Image
        pool:
          vmImageName: Hosted Agent
        continueOnError: true
        steps:
          # Deploy Docker image directly from Docker Hub (skip downloading if not necessary)
          - script: |
              docker pull $(imageName):$(tag)  # Pull the Docker image from Docker Hub
              docker run -d -p 80:80 $(imageName):$(tag)  # Expose port 80 for web apps
            displayName: Deploy Docker Image
